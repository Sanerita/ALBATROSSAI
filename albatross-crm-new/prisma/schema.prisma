// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Represents the status of a lead in the sales pipeline
enum LeadStatus {
  NEW         @map("new")
  CONTACTED   @map("contacted")
  QUALIFIED   @map("qualified")
  PROPOSAL    @map("proposal")
  NEGOTIATION @map("negotiation")
  WON         @map("won")
  LOST        @map("lost")
}

/// Represents a potential customer lead in the CRM system
model Lead {
  /// Auto-generated unique identifier
  id          String     @id @default(cuid())
  
  /// Full name of the lead contact
  name        String     @db.VarChar(255)
  
  /// Primary email for communication
  email       String     @unique @db.VarChar(255)
  
  /// Estimated budget in USD
  budget      Float
  
  /// Current stage in sales pipeline
  status      LeadStatus @default(NEW)
  
  /// Company name (optional)
  company     String?    @db.VarChar(255)
  
  /// Whether this lead requires urgent attention
  urgency     Boolean?   @default(false)
  
  /// Engagement score (0-100)
  engagement  Int?       @default(0)
  
  /// Additional notes about the lead
  notes       String?    @db.Text
  
  /// Calculated lead score
  score       Int        @default(0)
  
  /// When the lead was created
  createdAt   DateTime   @default(now())
  
  /// When the lead was last updated
  updatedAt   DateTime   @updatedAt
  
  /// Last contact date
  lastContact DateTime?
  
  // Indexes for better query performance
  @@index([email])
  @@index([status])
  @@index([score])
  @@index([createdAt])
  @@index([urgency])
}

/// User model for tracking ownership
model User {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  leads       Lead[]
}